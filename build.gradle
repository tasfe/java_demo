group 'com.zdxu.demo'
version '1.0-SNAPSHOT'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'application'
sourceCompatibility = 1.8

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
    }
}

apply plugin: 'com.github.johnrengelman.shadow'


repositories {
    mavenCentral()
}

dependencies {
    compile "org.codehaus.groovy.modules.http-builder:http-builder:0.7"
    compile "org.apache.httpcomponents:httpmime:4.5"

    compile group: 'org.springframework', name: 'spring-context', version: '4.3.10.RELEASE'
    compile 'org.springframework.data:spring-data-jpa:1.11.6.RELEASE'
    compile group: 'org.mybatis', name: 'mybatis-spring', version: '1.3.1'
    compile group: 'com.alibaba', name: 'druid', version: '1.1.2'
    compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.6'
    compile group: 'org.mybatis', name: 'mybatis', version: '3.4.4'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.springframework', name: 'spring-test', version: '4.3.10.RELEASE'

}

//ext.extranalResourcesDirs = project.allprojects*.sourceSets.main.resources.srcDirs.flatten()

def env = System.getProperty("env", "develop")
def buildDir = "demo"
def appName = "java_demo"

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java"]
        }
        resources {
            srcDirs = ["test/$env/"]
        }
    }
}

task deploy(type: Copy) {
    println(libsDir)
    println("${appName}-${version}.jar")

    from(libsDir) {
        include "${appName}-${version}.jar"
    }

    from(configurations.compile) {
        include '*.jar'
        into "libs"
    }

    into "$buildDir"
}

task toTar(type: Tar, dependsOn: deploy) {
    
    println("$buildDir")

    from("$buildDir")

}

println toTar.archiveName
println relativePath(toTar.destinationDir)
println relativePath(toTar.archivePath)

mainClassName = "transaction.StaticAutowiredTest"


task toJar(dependsOn: shadowJar) {

}


shadowJar {
    baseName = "java_demo"  //前缀名称
    classifier = null   //名称后面的all
    version = null      //名称上的版本号
    mergeServiceFiles {
        path = 'META-INF/spring.*'
    }
}